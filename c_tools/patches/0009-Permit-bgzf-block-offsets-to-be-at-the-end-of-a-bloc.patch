From 3868315dc8b6102a8de6cf44d7eae4b1a9aa40e7 Mon Sep 17 00:00:00 2001
From: James Bonfield <jkb@sanger.ac.uk>
Date: Wed, 19 Feb 2020 12:30:42 +0000
Subject: [PATCH 09/10] Permit bgzf block offsets to be at the end of a block.

This fixes a bug caused by indices generated with
"samtools view --write-index -@8" (fixed in previous commit).  This
was leaving some block offsets at the end of the current block instead
of the start of the next block.

However bgzf_read treated such scenarios as a truncated read of length
0, which the calling code then interpreted as EOF.

Now at the exact end of a block is valid and triggers reading the next
block, but beyond the end of a block is treated as an erroneous block
offset.
---
 bgzf.c | 16 +++++++++++++++-
 1 file changed, 15 insertions(+), 1 deletion(-)

diff --git a/bgzf.c b/bgzf.c
index f2e9b1e..184cf89 100644
--- a/bgzf.c
+++ b/bgzf.c
@@ -1155,7 +1155,21 @@ ssize_t bgzf_read(BGZF *fp, void *data, size_t length)
                 return -1;
             }
             available = fp->block_length - fp->block_offset;
-            if (available <= 0) break;
+            if (available == 0) {
+                if (fp->block_length == 0)
+                    break; // EOF
+
+                // Offset was at end of block (see commit e9863a0)
+                fp->block_address = bgzf_htell(fp);
+                fp->block_offset = fp->block_length = 0;
+                continue;
+            } else if (available < 0) {
+                // Block offset was set to an invalid coordinate
+                hts_log_error("BGZF block offset %d set beyond block size %d",
+                              fp->block_offset, fp->block_length);
+                fp->errcode |= BGZF_ERR_MISUSE;
+                return -1;
+            }
         }
         copy_length = length - bytes_read < available? length - bytes_read : available;
         buffer = (uint8_t*)fp->uncompressed_block;
-- 
2.25.1

